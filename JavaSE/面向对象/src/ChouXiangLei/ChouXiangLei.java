package ChouXiangLei;

/*
    抽象类的特点：
        1.抽象类和抽象方法必须使用abstract关键字修饰；
            abstract class 类名 {}；                   修饰类叫抽象类
            public abstract void eat（）；             修饰方法叫抽象方法
        2.抽象类不一定有抽象方法，有抽象方法的类一定是抽象类或接口；
        3.抽象类不能实例化，
            按照多态的方式，由具体的子类实例化，其实这也是多态的一种，抽象类多态；
        4.抽象类的子类；
            要么是抽象类
            要么重写抽象类中的所有抽象方法

    抽象类的成员特点
        1.成员变量：既可以是变量，也可以是常量，abstract不能修饰成员变量
        2.构造方法：有
            用于子类访问父类数据的初始化

    抽象类的成员方法特性
        1.抽象方法，强制要求子类做的事情；
        2.非抽象方法，子类继承的事情，提高代码的复用性。

    抽象类的面试题
        1.一个抽象类如果没有抽象方法，能不能定义为抽象类？如果可以，有什么意义？
            可以，这么做的目的只有一个，就是不让其他类创建本类对象，交予子类完成。
        2.abstract不能和哪些关键字共存？
            abstract 和static不能共存
                被abstract修饰的方法没有方法体
                被static修饰的可以用类名.调用，但是类名.调用抽象方法是没有意义的
            abstract和final不能共存
                被final修饰的方法不让子类进行重写，所以是矛盾的
            abstract和private不能共存
                被abstract修饰的是为了让子类看到并且强制重写
                被private修饰的不让子类访问，所以他俩是矛盾的
 */
public class ChouXiangLei {
    public static void main(String[] args) {

    }
}
